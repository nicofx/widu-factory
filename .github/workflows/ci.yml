# .github/workflows/ci.yml
name: CI Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-test:
    runs-on: ubuntu-latest
    env:
      NODE_ENV: test

    steps:
      # ─────────────── Base ───────────────
      - name: ⏬ Checkout repo
        uses: actions/checkout@v3

      - name: 🔧 Setup Node 20 + PNPM cache
        uses: actions/setup-node@v3
        with:
          node-version: 20
          cache: pnpm

      - name: 📦 Install root deps (lock-strict)
        run: pnpm install --frozen-lockfile

      # ───────────── Lint & Unit tests ─────────────
      - name: 🏗️ Build API (monorepo root)
        run: |
          cd apps/api-core
          pnpm build:docker      # 👈  compila con tsc (no publica imagen)

      - name: 🧹 Lint all
        run: pnpm lint

      - name: 🧪 Unit tests + coverage
        run: |
          cd apps/api-core
          pnpm test -- --coverage

      # ───────────── Swagger & SDK ─────────────
      - name: 📜 Generate Swagger JSON & TypeScript SDK
        run: |
          export GENERATE_SWAGGER=true
          node dist/apps/api-core/main.js                 # crea docs/openapi.json
          npx openapi-generator-cli generate \
            -i docs/openapi.json \
            -g typescript-axios \
            -o libs/sdk

      - name: 📤 Upload SDK artifact
        uses: actions/upload-artifact@v3
        with:
          name: widu-sdk
          path: libs/sdk

      - name: 📤 Upload coverage
        uses: actions/upload-artifact@v3
        with:
          name: coverage-report
          path: apps/api-core/coverage

  build-docker:
    needs: build-test
    runs-on: ubuntu-latest

    steps:
      - name: ⏬ Checkout repo
        uses: actions/checkout@v3

      - name: 🔧 Setup Node 20 + PNPM cache
        uses: actions/setup-node@v3
        with:
          node-version: 20
          cache: pnpm

      - name: 📦 Install root deps
        run: pnpm install --frozen-lockfile

      - name: 🐋 Build Docker image (no-cache)
        run: |
          docker build \
            --build-arg NODE_ENV=production \
            -f apps/api-core/Dockerfile \
            -t widu-factory-api-core:ci .

      # ─── Push opcional ───
      - name: 🔑 Docker login
        if: github.event_name == 'push'
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: 🏷️ Tag & push image
        if: github.event_name == 'push'
        run: |
          docker tag widu-factory-api-core:ci yourdockerhubuser/widu-factory-api-core:latest
          docker push yourdockerhubuser/widu-factory-api-core:latest
